//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.2.0
//     from Assets/PlayerInputActions.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerInputActions : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerInputActions()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerInputActions"",
    ""maps"": [
        {
            ""name"": ""PlayerActions"",
            ""id"": ""a5d6c7b5-b125-47fb-86e9-f029036ead2d"",
            ""actions"": [
                {
                    ""name"": ""PlayerOneSwitch"",
                    ""type"": ""Button"",
                    ""id"": ""33efa8af-513d-4f75-9b4a-46de8cf23397"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""PlayerOneUp"",
                    ""type"": ""Button"",
                    ""id"": ""9dbc2e90-1678-46f2-9912-365d4d68c275"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""PlayerTwoUp"",
                    ""type"": ""Button"",
                    ""id"": ""7fe965a7-3a8f-4bf1-9331-fcd6f920824f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""PlayerOneDown"",
                    ""type"": ""Button"",
                    ""id"": ""d64a03bc-468a-4a6a-b138-560381c9c8a5"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""PlayerTwoDown"",
                    ""type"": ""Button"",
                    ""id"": ""c7c60f7e-c6b4-4793-84b4-f4e38c9e1938"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""PlayerOneLeft"",
                    ""type"": ""Button"",
                    ""id"": ""04010d0b-73b9-4f41-8ce4-645d65323527"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""PlayerTwoLeft"",
                    ""type"": ""Button"",
                    ""id"": ""8b54e992-9f3a-476a-9ad5-f6ede0b154e6"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""PlayerOneRight"",
                    ""type"": ""Button"",
                    ""id"": ""edd021ae-ff29-41f9-8fc3-b2d49d255e77"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""PlayerTwoRight"",
                    ""type"": ""Button"",
                    ""id"": ""e73ed3f5-2ac2-4d10-a4bc-d2d9f334c8be"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""PlayerOneUndo"",
                    ""type"": ""Button"",
                    ""id"": ""7cefd07e-e99d-44be-945a-01bf1c297ba7"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""PlayerTwoUndo"",
                    ""type"": ""Button"",
                    ""id"": ""33b63201-8501-4c9a-9b5b-c5b5a57edac4"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""PlayerTwoSwitch"",
                    ""type"": ""Button"",
                    ""id"": ""ed869a8a-9141-40de-bb96-f63620da4d7c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""2104a808-7c2d-4e6c-bc4c-de48b9b7d72e"",
                    ""path"": ""<Keyboard>/tab"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""PlayerOneSwitch"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c78883a2-16f9-407d-8038-980662d31576"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""PlayerOneUp"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""739e1e2b-9c62-40ae-a391-4ca818d11d22"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""PlayerTwoUp"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8546415e-5991-4882-b660-e47f3dcc56f6"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""PlayerOneDown"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8c248dd1-e82e-4281-ae84-2ecaeb1b660b"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""PlayerTwoDown"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""57aff2d0-51cd-4bf0-a433-05944c0db42d"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""PlayerOneLeft"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7be2f5e1-38b8-4b68-bae5-a58b52656cb0"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""PlayerTwoLeft"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b8fac766-c93e-401a-b482-026b6faf2da1"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""PlayerOneRight"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""395c7cd9-5e55-4ed7-835c-e71ed65abb89"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""PlayerTwoRight"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""23bdd51b-0947-4714-b6cb-e84d84820cdd"",
                    ""path"": ""<Keyboard>/x"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""PlayerOneUndo"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""19f2bade-b078-4374-8b89-f51126f1a503"",
                    ""path"": ""<Keyboard>/backspace"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""PlayerTwoUndo"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8d06550e-f3b8-4e19-b06e-a5f29e290a18"",
                    ""path"": ""<Keyboard>/enter"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""PlayerTwoSwitch"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": [
        {
            ""name"": ""Keyboard"",
            ""bindingGroup"": ""Keyboard"",
            ""devices"": []
        }
    ]
}");
        // PlayerActions
        m_PlayerActions = asset.FindActionMap("PlayerActions", throwIfNotFound: true);
        m_PlayerActions_PlayerOneSwitch = m_PlayerActions.FindAction("PlayerOneSwitch", throwIfNotFound: true);
        m_PlayerActions_PlayerOneUp = m_PlayerActions.FindAction("PlayerOneUp", throwIfNotFound: true);
        m_PlayerActions_PlayerTwoUp = m_PlayerActions.FindAction("PlayerTwoUp", throwIfNotFound: true);
        m_PlayerActions_PlayerOneDown = m_PlayerActions.FindAction("PlayerOneDown", throwIfNotFound: true);
        m_PlayerActions_PlayerTwoDown = m_PlayerActions.FindAction("PlayerTwoDown", throwIfNotFound: true);
        m_PlayerActions_PlayerOneLeft = m_PlayerActions.FindAction("PlayerOneLeft", throwIfNotFound: true);
        m_PlayerActions_PlayerTwoLeft = m_PlayerActions.FindAction("PlayerTwoLeft", throwIfNotFound: true);
        m_PlayerActions_PlayerOneRight = m_PlayerActions.FindAction("PlayerOneRight", throwIfNotFound: true);
        m_PlayerActions_PlayerTwoRight = m_PlayerActions.FindAction("PlayerTwoRight", throwIfNotFound: true);
        m_PlayerActions_PlayerOneUndo = m_PlayerActions.FindAction("PlayerOneUndo", throwIfNotFound: true);
        m_PlayerActions_PlayerTwoUndo = m_PlayerActions.FindAction("PlayerTwoUndo", throwIfNotFound: true);
        m_PlayerActions_PlayerTwoSwitch = m_PlayerActions.FindAction("PlayerTwoSwitch", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // PlayerActions
    private readonly InputActionMap m_PlayerActions;
    private IPlayerActionsActions m_PlayerActionsActionsCallbackInterface;
    private readonly InputAction m_PlayerActions_PlayerOneSwitch;
    private readonly InputAction m_PlayerActions_PlayerOneUp;
    private readonly InputAction m_PlayerActions_PlayerTwoUp;
    private readonly InputAction m_PlayerActions_PlayerOneDown;
    private readonly InputAction m_PlayerActions_PlayerTwoDown;
    private readonly InputAction m_PlayerActions_PlayerOneLeft;
    private readonly InputAction m_PlayerActions_PlayerTwoLeft;
    private readonly InputAction m_PlayerActions_PlayerOneRight;
    private readonly InputAction m_PlayerActions_PlayerTwoRight;
    private readonly InputAction m_PlayerActions_PlayerOneUndo;
    private readonly InputAction m_PlayerActions_PlayerTwoUndo;
    private readonly InputAction m_PlayerActions_PlayerTwoSwitch;
    public struct PlayerActionsActions
    {
        private @PlayerInputActions m_Wrapper;
        public PlayerActionsActions(@PlayerInputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @PlayerOneSwitch => m_Wrapper.m_PlayerActions_PlayerOneSwitch;
        public InputAction @PlayerOneUp => m_Wrapper.m_PlayerActions_PlayerOneUp;
        public InputAction @PlayerTwoUp => m_Wrapper.m_PlayerActions_PlayerTwoUp;
        public InputAction @PlayerOneDown => m_Wrapper.m_PlayerActions_PlayerOneDown;
        public InputAction @PlayerTwoDown => m_Wrapper.m_PlayerActions_PlayerTwoDown;
        public InputAction @PlayerOneLeft => m_Wrapper.m_PlayerActions_PlayerOneLeft;
        public InputAction @PlayerTwoLeft => m_Wrapper.m_PlayerActions_PlayerTwoLeft;
        public InputAction @PlayerOneRight => m_Wrapper.m_PlayerActions_PlayerOneRight;
        public InputAction @PlayerTwoRight => m_Wrapper.m_PlayerActions_PlayerTwoRight;
        public InputAction @PlayerOneUndo => m_Wrapper.m_PlayerActions_PlayerOneUndo;
        public InputAction @PlayerTwoUndo => m_Wrapper.m_PlayerActions_PlayerTwoUndo;
        public InputAction @PlayerTwoSwitch => m_Wrapper.m_PlayerActions_PlayerTwoSwitch;
        public InputActionMap Get() { return m_Wrapper.m_PlayerActions; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerActionsActions set) { return set.Get(); }
        public void SetCallbacks(IPlayerActionsActions instance)
        {
            if (m_Wrapper.m_PlayerActionsActionsCallbackInterface != null)
            {
                @PlayerOneSwitch.started -= m_Wrapper.m_PlayerActionsActionsCallbackInterface.OnPlayerOneSwitch;
                @PlayerOneSwitch.performed -= m_Wrapper.m_PlayerActionsActionsCallbackInterface.OnPlayerOneSwitch;
                @PlayerOneSwitch.canceled -= m_Wrapper.m_PlayerActionsActionsCallbackInterface.OnPlayerOneSwitch;
                @PlayerOneUp.started -= m_Wrapper.m_PlayerActionsActionsCallbackInterface.OnPlayerOneUp;
                @PlayerOneUp.performed -= m_Wrapper.m_PlayerActionsActionsCallbackInterface.OnPlayerOneUp;
                @PlayerOneUp.canceled -= m_Wrapper.m_PlayerActionsActionsCallbackInterface.OnPlayerOneUp;
                @PlayerTwoUp.started -= m_Wrapper.m_PlayerActionsActionsCallbackInterface.OnPlayerTwoUp;
                @PlayerTwoUp.performed -= m_Wrapper.m_PlayerActionsActionsCallbackInterface.OnPlayerTwoUp;
                @PlayerTwoUp.canceled -= m_Wrapper.m_PlayerActionsActionsCallbackInterface.OnPlayerTwoUp;
                @PlayerOneDown.started -= m_Wrapper.m_PlayerActionsActionsCallbackInterface.OnPlayerOneDown;
                @PlayerOneDown.performed -= m_Wrapper.m_PlayerActionsActionsCallbackInterface.OnPlayerOneDown;
                @PlayerOneDown.canceled -= m_Wrapper.m_PlayerActionsActionsCallbackInterface.OnPlayerOneDown;
                @PlayerTwoDown.started -= m_Wrapper.m_PlayerActionsActionsCallbackInterface.OnPlayerTwoDown;
                @PlayerTwoDown.performed -= m_Wrapper.m_PlayerActionsActionsCallbackInterface.OnPlayerTwoDown;
                @PlayerTwoDown.canceled -= m_Wrapper.m_PlayerActionsActionsCallbackInterface.OnPlayerTwoDown;
                @PlayerOneLeft.started -= m_Wrapper.m_PlayerActionsActionsCallbackInterface.OnPlayerOneLeft;
                @PlayerOneLeft.performed -= m_Wrapper.m_PlayerActionsActionsCallbackInterface.OnPlayerOneLeft;
                @PlayerOneLeft.canceled -= m_Wrapper.m_PlayerActionsActionsCallbackInterface.OnPlayerOneLeft;
                @PlayerTwoLeft.started -= m_Wrapper.m_PlayerActionsActionsCallbackInterface.OnPlayerTwoLeft;
                @PlayerTwoLeft.performed -= m_Wrapper.m_PlayerActionsActionsCallbackInterface.OnPlayerTwoLeft;
                @PlayerTwoLeft.canceled -= m_Wrapper.m_PlayerActionsActionsCallbackInterface.OnPlayerTwoLeft;
                @PlayerOneRight.started -= m_Wrapper.m_PlayerActionsActionsCallbackInterface.OnPlayerOneRight;
                @PlayerOneRight.performed -= m_Wrapper.m_PlayerActionsActionsCallbackInterface.OnPlayerOneRight;
                @PlayerOneRight.canceled -= m_Wrapper.m_PlayerActionsActionsCallbackInterface.OnPlayerOneRight;
                @PlayerTwoRight.started -= m_Wrapper.m_PlayerActionsActionsCallbackInterface.OnPlayerTwoRight;
                @PlayerTwoRight.performed -= m_Wrapper.m_PlayerActionsActionsCallbackInterface.OnPlayerTwoRight;
                @PlayerTwoRight.canceled -= m_Wrapper.m_PlayerActionsActionsCallbackInterface.OnPlayerTwoRight;
                @PlayerOneUndo.started -= m_Wrapper.m_PlayerActionsActionsCallbackInterface.OnPlayerOneUndo;
                @PlayerOneUndo.performed -= m_Wrapper.m_PlayerActionsActionsCallbackInterface.OnPlayerOneUndo;
                @PlayerOneUndo.canceled -= m_Wrapper.m_PlayerActionsActionsCallbackInterface.OnPlayerOneUndo;
                @PlayerTwoUndo.started -= m_Wrapper.m_PlayerActionsActionsCallbackInterface.OnPlayerTwoUndo;
                @PlayerTwoUndo.performed -= m_Wrapper.m_PlayerActionsActionsCallbackInterface.OnPlayerTwoUndo;
                @PlayerTwoUndo.canceled -= m_Wrapper.m_PlayerActionsActionsCallbackInterface.OnPlayerTwoUndo;
                @PlayerTwoSwitch.started -= m_Wrapper.m_PlayerActionsActionsCallbackInterface.OnPlayerTwoSwitch;
                @PlayerTwoSwitch.performed -= m_Wrapper.m_PlayerActionsActionsCallbackInterface.OnPlayerTwoSwitch;
                @PlayerTwoSwitch.canceled -= m_Wrapper.m_PlayerActionsActionsCallbackInterface.OnPlayerTwoSwitch;
            }
            m_Wrapper.m_PlayerActionsActionsCallbackInterface = instance;
            if (instance != null)
            {
                @PlayerOneSwitch.started += instance.OnPlayerOneSwitch;
                @PlayerOneSwitch.performed += instance.OnPlayerOneSwitch;
                @PlayerOneSwitch.canceled += instance.OnPlayerOneSwitch;
                @PlayerOneUp.started += instance.OnPlayerOneUp;
                @PlayerOneUp.performed += instance.OnPlayerOneUp;
                @PlayerOneUp.canceled += instance.OnPlayerOneUp;
                @PlayerTwoUp.started += instance.OnPlayerTwoUp;
                @PlayerTwoUp.performed += instance.OnPlayerTwoUp;
                @PlayerTwoUp.canceled += instance.OnPlayerTwoUp;
                @PlayerOneDown.started += instance.OnPlayerOneDown;
                @PlayerOneDown.performed += instance.OnPlayerOneDown;
                @PlayerOneDown.canceled += instance.OnPlayerOneDown;
                @PlayerTwoDown.started += instance.OnPlayerTwoDown;
                @PlayerTwoDown.performed += instance.OnPlayerTwoDown;
                @PlayerTwoDown.canceled += instance.OnPlayerTwoDown;
                @PlayerOneLeft.started += instance.OnPlayerOneLeft;
                @PlayerOneLeft.performed += instance.OnPlayerOneLeft;
                @PlayerOneLeft.canceled += instance.OnPlayerOneLeft;
                @PlayerTwoLeft.started += instance.OnPlayerTwoLeft;
                @PlayerTwoLeft.performed += instance.OnPlayerTwoLeft;
                @PlayerTwoLeft.canceled += instance.OnPlayerTwoLeft;
                @PlayerOneRight.started += instance.OnPlayerOneRight;
                @PlayerOneRight.performed += instance.OnPlayerOneRight;
                @PlayerOneRight.canceled += instance.OnPlayerOneRight;
                @PlayerTwoRight.started += instance.OnPlayerTwoRight;
                @PlayerTwoRight.performed += instance.OnPlayerTwoRight;
                @PlayerTwoRight.canceled += instance.OnPlayerTwoRight;
                @PlayerOneUndo.started += instance.OnPlayerOneUndo;
                @PlayerOneUndo.performed += instance.OnPlayerOneUndo;
                @PlayerOneUndo.canceled += instance.OnPlayerOneUndo;
                @PlayerTwoUndo.started += instance.OnPlayerTwoUndo;
                @PlayerTwoUndo.performed += instance.OnPlayerTwoUndo;
                @PlayerTwoUndo.canceled += instance.OnPlayerTwoUndo;
                @PlayerTwoSwitch.started += instance.OnPlayerTwoSwitch;
                @PlayerTwoSwitch.performed += instance.OnPlayerTwoSwitch;
                @PlayerTwoSwitch.canceled += instance.OnPlayerTwoSwitch;
            }
        }
    }
    public PlayerActionsActions @PlayerActions => new PlayerActionsActions(this);
    private int m_KeyboardSchemeIndex = -1;
    public InputControlScheme KeyboardScheme
    {
        get
        {
            if (m_KeyboardSchemeIndex == -1) m_KeyboardSchemeIndex = asset.FindControlSchemeIndex("Keyboard");
            return asset.controlSchemes[m_KeyboardSchemeIndex];
        }
    }
    public interface IPlayerActionsActions
    {
        void OnPlayerOneSwitch(InputAction.CallbackContext context);
        void OnPlayerOneUp(InputAction.CallbackContext context);
        void OnPlayerTwoUp(InputAction.CallbackContext context);
        void OnPlayerOneDown(InputAction.CallbackContext context);
        void OnPlayerTwoDown(InputAction.CallbackContext context);
        void OnPlayerOneLeft(InputAction.CallbackContext context);
        void OnPlayerTwoLeft(InputAction.CallbackContext context);
        void OnPlayerOneRight(InputAction.CallbackContext context);
        void OnPlayerTwoRight(InputAction.CallbackContext context);
        void OnPlayerOneUndo(InputAction.CallbackContext context);
        void OnPlayerTwoUndo(InputAction.CallbackContext context);
        void OnPlayerTwoSwitch(InputAction.CallbackContext context);
    }
}
